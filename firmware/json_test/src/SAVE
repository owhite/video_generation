#include <ArduinoJson.h>

void setup() {
  // Initialize serial port
  Serial.begin(9600);
  while (!Serial) continue;

  StaticJsonDocument<200> doc;

  char json[200];
  char temp[200];

  strcpy(json, "{\"sensor\":\"gps\",\"time\":1351824120,\"data\":[48.756080,2.302038]}\0");

  // Deserialize the JSON document
  DeserializationError error = deserializeJson(doc, json);

  // Test if parsing succeeds.
  if (error) {
    Serial.print(F("deserializeJson() failed: "));
    Serial.println(error.f_str());
    return;
  }

  const char* sensor = doc["sensor"];
  long time = doc["time"];
  double latitude = doc["data"][0];
  double longitude = doc["data"][1];

  // Print values.
  Serial.println(sensor);
  Serial.println(time);
  Serial.println(latitude, 6);
  Serial.println(longitude, 6);

  strcpy(json, "[34muart[0m@MESC>{\"adc1\":689,\"ehz\":-0.171,\"error\":0,\"id\":0.152,\"iq\":-0.073,\"iqreq\":0.000,\"TMOS\":0.000,\"TMOT\":0.000,\"vbus\":56.997,\"Vd\":2.196,\"Vq\":0.676}\0");
  
  char *ptr = strchr( json, '{' );

  int position = (ptr == NULL ? -1 : ptr - json);

  Serial.print("thing: ");
  Serial.println(position);
  
  strncpy(temp, json, position);

  error = deserializeJson(doc, temp);

  // Test if parsing succeeds.
  if (error) {
    Serial.print(F("deserializeJson() #2 failed: "));
    Serial.println(error.f_str());
    return;
  }
  else {
    Serial.println("#1 it worked");
  }

}

